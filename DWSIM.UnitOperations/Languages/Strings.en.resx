<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADJ_Desc" xml:space="preserve">
    <value>Logical block for controlling a variable in the flowsheet</value>
  </data>
  <data name="ADJ_Name" xml:space="preserve">
    <value>Controller Block</value>
  </data>
  <data name="CABS_Desc" xml:space="preserve">
    <value>Model for rigorous simulation of absorption columns</value>
  </data>
  <data name="CABS_Name" xml:space="preserve">
    <value>Absorption Column</value>
  </data>
  <data name="CDEST_Desc" xml:space="preserve">
    <value>Rigorous model for simulation of distillation columns</value>
  </data>
  <data name="CDEST_Name" xml:space="preserve">
    <value>Distillation Column</value>
  </data>
  <data name="COMP_Desc" xml:space="preserve">
    <value>Model for a compressor</value>
  </data>
  <data name="COMP_Name" xml:space="preserve">
    <value>Compressor</value>
  </data>
  <data name="CONV_Desc" xml:space="preserve">
    <value>Supports reactions defined by amounts of reactant converted as a function of temperature</value>
  </data>
  <data name="CONV_Name" xml:space="preserve">
    <value>Conversion Reactor</value>
  </data>
  <data name="COOL_Desc" xml:space="preserve">
    <value>Simple cooler model</value>
  </data>
  <data name="COOL_Name" xml:space="preserve">
    <value>Cooler</value>
  </data>
  <data name="COUO_Desc" xml:space="preserve">
    <value>Model for utilization of a CAPE-OPEN Unit Operation in the flowsheet</value>
  </data>
  <data name="COUO_Name" xml:space="preserve">
    <value>CAPE-OPEN Unit Operation</value>
  </data>
  <data name="CRABS_Desc" xml:space="preserve">
    <value>Rigorous reboiled absorber model</value>
  </data>
  <data name="CRABS_Name" xml:space="preserve">
    <value>Reboiled Absorber</value>
  </data>
  <data name="CRFABS_Desc" xml:space="preserve">
    <value>Rigorous Refluxed Absorber model</value>
  </data>
  <data name="CRFABS_Name" xml:space="preserve">
    <value>Refluxed Absorber</value>
  </data>
  <data name="CSC_Desc" xml:space="preserve">
    <value>Model for quick sizing of distillation columns</value>
  </data>
  <data name="CSC_Name" xml:space="preserve">
    <value>Shortcut Column</value>
  </data>
  <data name="CSEP_Desc" xml:space="preserve">
    <value>Model for a hypothetical compound separation process</value>
  </data>
  <data name="CSEP_Name" xml:space="preserve">
    <value>Compound Separator</value>
  </data>
  <data name="CSTR_Desc" xml:space="preserve">
    <value>CSTR model, supports Kinetic and HetCat reactions</value>
  </data>
  <data name="CSTR_Name" xml:space="preserve">
    <value>Continuous Stirred Tank Reactor (CSTR)</value>
  </data>
  <data name="EQUIL_Desc" xml:space="preserve">
    <value>Supports equilibrium constant-defined reactions</value>
  </data>
  <data name="EQUIL_Name" xml:space="preserve">
    <value>Equilibrium Reactor</value>
  </data>
  <data name="ERECY_Desc" xml:space="preserve">
    <value>Logical block for Energy Streams</value>
  </data>
  <data name="ERECY_Name" xml:space="preserve">
    <value>Energy Recycle Block</value>
  </data>
  <data name="ESTR_Desc" xml:space="preserve">
    <value>Energy flow from/to Unit Operations</value>
  </data>
  <data name="ESTR_Name" xml:space="preserve">
    <value>Energy Stream</value>
  </data>
  <data name="EXLUO_Desc" xml:space="preserve">
    <value>Use a spreadsheet file as a flowsheet block</value>
  </data>
  <data name="EXLUO_Name" xml:space="preserve">
    <value>Spreadsheet</value>
  </data>
  <data name="EXP_Desc" xml:space="preserve">
    <value>Model for an expander</value>
  </data>
  <data name="EXP_Name" xml:space="preserve">
    <value>Expander (Turbine)</value>
  </data>
  <data name="FILTER_Desc" xml:space="preserve">
    <value>Solids Filter model</value>
  </data>
  <data name="FILTER_Name" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FLOWS_Desc" xml:space="preserve">
    <value>Model for using an existing simulation as a flowsheet block</value>
  </data>
  <data name="FLOWS_Name" xml:space="preserve">
    <value>Flowsheet</value>
  </data>
  <data name="GIBBS_Desc" xml:space="preserve">
    <value>Calculates chemical/atomic equilibrium for a Material Stream</value>
  </data>
  <data name="GIBBS_Name" xml:space="preserve">
    <value>Gibbs Reactor</value>
  </data>
  <data name="HEAT_Desc" xml:space="preserve">
    <value>Simple heater model</value>
  </data>
  <data name="HEAT_Name" xml:space="preserve">
    <value>Heater</value>
  </data>
  <data name="HEXCH_Desc" xml:space="preserve">
    <value>Rigorous Heat Exchanger model</value>
  </data>
  <data name="HEXCH_Name" xml:space="preserve">
    <value>Heat Exchanger</value>
  </data>
  <data name="IPUO_Desc" xml:space="preserve">
    <value>Python Script Unit Operation</value>
  </data>
  <data name="IPUO_Name" xml:space="preserve">
    <value>Python Script</value>
  </data>
  <data name="MIX_Desc" xml:space="preserve">
    <value>Mixes multiple Material Streams into a single one</value>
  </data>
  <data name="MIX_Name" xml:space="preserve">
    <value>Stream Mixer</value>
  </data>
  <data name="MRECY_Desc" xml:space="preserve">
    <value>Block for connecting tear Material Streams</value>
  </data>
  <data name="MRECY_Name" xml:space="preserve">
    <value>Recycle Block</value>
  </data>
  <data name="ORIF_Desc" xml:space="preserve">
    <value>Sizes or evaluates an orifice plate</value>
  </data>
  <data name="ORIF_Name" xml:space="preserve">
    <value>Orifice Plate</value>
  </data>
  <data name="PFR_Desc" xml:space="preserve">
    <value>Plug-Flow Reactor model, supports Kinetic and HetCat reactions</value>
  </data>
  <data name="PFR_Name" xml:space="preserve">
    <value>Plug-Flow Reactor (PFR)</value>
  </data>
  <data name="PIPE_Desc" xml:space="preserve">
    <value>Defines a piping segment for pressure drop calculations</value>
  </data>
  <data name="PIPE_Name" xml:space="preserve">
    <value>Piping Segment</value>
  </data>
  <data name="PUMP_Desc" xml:space="preserve">
    <value>Centrifugal Pump model</value>
  </data>
  <data name="PUMP_Err1" xml:space="preserve">
    <value>No type defined!</value>
  </data>
  <data name="PUMP_Err2" xml:space="preserve">
    <value>Database already exists.</value>
  </data>
  <data name="PUMP_Err3" xml:space="preserve">
    <value>Database not found!</value>
  </data>
  <data name="PUMP_Modified" xml:space="preserve">
    <value>Modified</value>
  </data>
  <data name="PUMP_Msg1" xml:space="preserve">
    <value> created.</value>
  </data>
  <data name="PUMP_Msg2" xml:space="preserve">
    <value>Overwrite?</value>
  </data>
  <data name="PUMP_Name" xml:space="preserve">
    <value>Centrifugal Pump</value>
  </data>
  <data name="PUMP_Saved" xml:space="preserve">
    <value>Saved</value>
  </data>
  <data name="SPEC_Desc" xml:space="preserve">
    <value>Defines a dependent variable/object from other variables/objects</value>
  </data>
  <data name="SPEC_Name" xml:space="preserve">
    <value>Specification Block</value>
  </data>
  <data name="SPLIT_Desc" xml:space="preserve">
    <value>Splits a single Material Stream into multiple ones</value>
  </data>
  <data name="SPLIT_Name" xml:space="preserve">
    <value>Stream Splitter</value>
  </data>
  <data name="SSEP_Desc" xml:space="preserve">
    <value>Separates a solid phase from the others in a Material Stream</value>
  </data>
  <data name="SSEP_Name" xml:space="preserve">
    <value>Solids Separator</value>
  </data>
  <data name="TANK_Desc" xml:space="preserve">
    <value>Simple Tank model</value>
  </data>
  <data name="TANK_Name" xml:space="preserve">
    <value>Tank</value>
  </data>
  <data name="VALVE_Desc" xml:space="preserve">
    <value>Isenthalpic Valve model</value>
  </data>
  <data name="VALVE_Name" xml:space="preserve">
    <value>Valve</value>
  </data>
  <data name="VESSEL_Desc" xml:space="preserve">
    <value>Fluid phase separator (vapor/liquid)</value>
  </data>
  <data name="VESSEL_Name" xml:space="preserve">
    <value>Gas-Liquid Separator</value>
  </data>
</root>